scikit-learn
機械学習全般のアルゴリズムが実装されたPythonライブラリー

pip install scikit-learn

やること：
線形回帰
分類・分析（SVM）


%matplotlib inline

ステップ：
1.データセットの用意
元のデータを用意し、学習用のトレーニングデータセットや、検証用のテストデータセットに加工
（Numpy, Pandasの配列等をつかう）
データセットの用意に、作業時間の多くを割くことになります。

2.アルゴリズム（モデル）の選択
データの特徴に応じて最適なアルゴリズムを経験に基づいて選択

【教師あり学習】
[回帰]
・線形回帰
・非線形回帰
[分析・分類]
・サポートベクターマシン(SVM)
・K最近傍法
・アンサンブル学習
・ナイーブベイズ
・確率的勾配降下法

【教師なし学習】
[クラスタリング]
・K-Meansクラスタリング
・Mean-shiftクラスタリング
・混合ガウスモデル（GMM）
[次元削減]
・主成分分析（PCA）
・等長写像
・カーネル法


3.学習
コード1行、fit( )関数を実行するだけ
---------------------------------------------
fit([説明変数（X軸）], [目的変数（Y軸）])
---------------------------------------------


4.予測・評価
テストデータを使った予測。
どの機械学習アルゴリズムを選択しても、教師あり学習では同じようにpredict( )関数を呼び出すだけ
predict(テストデータ)


語彙：
説明変数：予測に使う情報。特徴量を抽出した数値。
目的変数：予測したい情報。回帰では数値、分類ではIDのようなデータ。
モデル：	説明変数と目的変数を関連付ける数式やプログラム




ランダム値を生成し利用するのにscikit-learnライブラリーの「datasets」クラスを使用

make_regression( 第1引数, 第2引数, 第3引数 )
  第1引数: サンプル数
  第2引数: フィーチャー数(入力データの次元)
  第3引数: ガウスノイズの大きさ

アルゴリズム：線形回帰
LinearRegression( )関数






なお、scikit-learnには、アヤメの計測データ以外にも、次のようなデータセットが用意されています。
ボストン市の住宅価格（Boston house-prices）
糖尿病患者の診断データ（Diabetes）
数字の手書き文字（Digits）
生理学的特徴と運動能力の関係（Linnerud）



データセットの分割にはmodel_selectionクラスのtrain_test_split( )関数を使用
第1引数に説明変数の配列
第2引数に目的変数の配列
第3引数の「test_size=1未満の小数値」で何割のデータをテスト用に使用するか指定





ーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーーー
第4回
TensorFlow
機械学習/ディープラーニングのためのライブラリー

MNSIT：手書きの数字を画像認識するのに使用されるチュートリアルデータ
pip install tensorflow
pip install tensorflow==2.11.0


TensorFlowのコーディングには、3つのモデルのうちいずれかを用います。
Sequentialモデル
Functionalモデル
Subclassingモデル

「Sequentialモデル」の流れ
データセットの読み込み
モデルの構築
モデルのコンパイル
モデルをトレーニング
モデルの評価



