re.replace( )
re.sub( )


基本
re.sub(置換される文字列のパターン, 置換する文字列, 元の文字列)
応用
re.sub(置換される文字列のパターン, 置換する文字列, 元の文字列, 置き換える回数)

正規表現では「\（バックスラッシュ）」を使った特殊シーケンスを多用するため、
「r"文字列"」と「r」を付けてraw文字列を使用するようにします。
文字列パターンを「r"[aA]"」とした場合、aにもAにも一致する文字を表します。

--------------------------------------------------
raw文字列 とは
"..."の中の文字列を単なる文字列として解釈します。
--------------------------------------------------


re.match( )	:文字列の先頭で正規表現で指定したパターンと一致するオブジェクトを返す。
re.search( )	:正規表現で指定したパターンと一致する最初の場所を探して、対応するオブジェクトを返す。
re.findall( )	:正規表現で指定したパターンと一致する部分文字列を全て探しだしリスト型で返す。
re.findter( )	:正規表現で指定したパターンと一致する部分文字列を全て探しだしイテレーター型で返す。


re.compile( )	:パターンオブジェクトの生成（正規表現の文字パターンをあらかじめコンパイルしておく。）

time python sample3-3-7.py
実行時間を調べられるらしい。

re.I
フラグで、英字の大文字小文字を区別しない。


\	直後の文字をエスケープ
^	先頭にマッチ
.	改行を除く任意の1文字
$	末尾にマッチ
|	選択
*	０回以上の繰り返し
+	１回以上の繰り返し
?	０回または１回
{m}	m回の繰り返し
{m,n}	m〜n回の繰り返し

文字クラス」はマッチしたい文字の集合
----------------------------
文字クラス	説明
[a-z]		英小文字のいずれか1文字にマッチ
[A-Z]		英大文字のいずれか1文字にマッチ
[0-9]		数字1文字にマッチ
[a-zA-Z0-9]	英数字のいずれか1文字にマッチ
[^a-zA-Z]	英字以外にマッチ
[^0-9]		数字以外にマッチ
----------------------------

※メタ文字は文字クラスの内部では無効
補集合を表す場合、「^（ハット）」を使って[^a-d]

----------------------------
特殊シーケンス	説明
\d	任意の数字
\D	任意の数字以外
\s	任意の空白文字
\S	任意の空白文字以外
\w	任意の英数字
\W	任意の英数字以外
\A	文字列の先頭
\Z	文字列の末尾
----------------------------


----------------------------
re.ASCII または re.A	\w, \b, \s, そして \d などをそれぞれのプロパティをもつ ASCII 文字だけにマッチする
re.DOTALL または re.S	. を改行を含む任意の文字にマッチする
re.IGNORECASE または re.I	大文字小文字を区別しない
re.LOCALE または re.L	ロケールに対応したマッチを行う
re.MULTILINE または re.M	^ や $ に作用して、複数行にマッチする
re.VERBOSE または re.X	冗長な正規表現を利用できるようにする
----------------------------

----------------------------
文字クラス	説明
[ぁ-ん]	任意のひらがな
[ァ-ン]	任意のカタカナ
[ぁ-んァ-ン]	任意のひらがなとカタカナ
[一-龥]	任意の漢字
----------------------------
全ての漢字を意味する文字クラスは「[一-龥]」です。Unicodeの4E00～9FA5の範囲になります。